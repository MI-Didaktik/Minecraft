#BlueJ class context
comment0.target=Spielfeld
comment0.text=\r\n\ Die\ Klasse\ Spielfeld\ dient\ der\ Verwaltung\ der\ Felder\ des\ Spielfeldes.\ \r\n\ Ein\ Spielfeld\ besteht\ aus\ mehreren\ Objekten\ der\ Klasse\ Feld.\r\n\ \r\n\ @author\ Tim\ Busch,\ Beatrice\ Wellmann\r\n\ @version\ 1\r\n
comment1.params=anzahlBomben\ reihen\ spalten
comment1.target=Spielfeld(int,\ int,\ int)
comment1.text=\r\n\ Konstruktor\ f\u00FCr\ Objekte\ der\ Klasse\ Spielfeld\r\n\ \r\n\ @param\ anzahlBomben\ die\ Anzahl\ der\ platzierten\ Bomben\r\n\ @param\ reihen\ \ \ \ \ \ \ die\ Anzahl\ der\ Reihen\ des\ erzeugten\ Spielfelds\r\n\ @param\ spalten\ \ \ \ \ \ die\ Anzahl\ der\ Reihen\ des\ erzeugten\ Spielfelds\r\n
comment10.params=
comment10.target=int\ getSpalten()
comment10.text=\r\n\ Liefert\ die\ Anzahl\ der\ Spalten\ des\ Spielfelds.\r\n\ \r\n\ @return\ Anzahl\ der\ Spalten\r\n
comment11.params=
comment11.target=int\ getAnzahlVerdeckt()
comment11.text=\r\n\ Liefert\ die\ Anzahl\ der\ noch\ nicht\ aufgedeckten\ Felder\ auf\ dem\ Spielfeld.\r\n\ \r\n\ @return\ Anzahl\ der\ verdeckten\ Felder\r\n
comment12.params=
comment12.target=int\ getAnzahlBomben()
comment12.text=\r\n\ Liefert\ die\ Anzahl\ der\ Bomben\ auf\ dem\ Spielfeld.\r\n\ \r\n\ @return\ Anzahl\ der\ Bomben\r\n
comment13.params=n
comment13.target=void\ aktualisiereVerdeckteFelder(int)
comment13.text=\r\n\ Aktualisiert\ die\ Anzahl\ der\ Verdeckten\ Felder.\r\n\ \r\n\ @param\ n\ die\ Anzahl\ der\ neu\ aufgedeckten\ Felder\r\n
comment14.params=
comment14.target=void\ erzeugeSpielFeld()
comment14.text=\r\n\ Erzeugt\ ein\ Spielfeld.\ Hierf\u00FCr\ werden\ die\ Felder\ initialisiert,\ die\ Bomben\r\n\ erzeugt\ und\ in\ den\ Feldern\ wird\ der\ Wert\ nachbarBombenAnzahl\ gesetzt.\r\n
comment15.params=
comment15.target=void\ erzeugeFelder()
comment15.text=\r\n\ Fuellt\ das\ Array\ felder\ mit\ Objekten\ der\ Klasse\ Feld.\r\n
comment16.params=
comment16.target=void\ erzeugeBomben()
comment16.text=\r\n\ Erzeugt\ an\ zufaelligen\ Positionen\ des\ Spielfelds\ Bomben.\r\n
comment17.params=
comment17.target=void\ zaehleNachbarnProFeld()
comment17.text=\r\n\ Zaehlt\ fuer\ jedes\ Feld\ die\ Anzahl\ der\ benachbarten\ Feldern,\ welche\ eine\ Bombe\ haben.\r\n
comment2.params=felder
comment2.target=Spielfeld(Feld[][])
comment2.text=\r\n\ Konstruktor\ zu\ Testzwecken\r\n\ NICHT\ ANPASSEN\r\n
comment3.params=start\ neueFelder
comment3.target=void\ deckeFreieNachbarnAufRekursiv(Feld,\ java.util.List)
comment3.text=\r\n\ Deckt\ alle\ benachbarten\ Felder\ eines\ Feldes\ auf,\ bei\ welchen\ nachbarBombenAnzahl\ den\ Wert\ 0\ hat.\ \r\n\ Fuer\ die\ dabei\ aufgedeckten\ Felder\ wird\ das\ wiederholt,\ so\ lange\ bis\ keine\ solchen\ benachbarten\ Felder\ mehr\ existieren.\ \r\n\ Die\ Methode\ nutzt\ hierzu\ Rekursion.\r\n\ \r\n\ @param\ start\ \ \ \ \ \ das\ Feld\ welches\ aufgedeckt\ wurde\r\n\ @param\ neueFelder\ eine\ Liste\ in\ der\ die\ von\ der\ Methode\ neu\ aufgedeckten\ Felder\ gespeichert\ werden\r\n
comment4.params=start\ neueFelder
comment4.target=void\ deckeFreieNachbarnAuf(Feld,\ java.util.List)
comment4.text=\r\n\ Alternative\ zu\ deckeFreieNachbarnAufRekursiv\r\n\ Deckt\ alle\ benachbarten\ Felder\ eines\ Feldes\ auf,\ bei\ welchen\ nachbarBombenAnzahl\ den\ Wert\ 0\ hat.\ \r\n\ Fuer\ die\ dabei\ aufgedeckten\ Felder\ wird\ das\ wiederholt,\ so\ lange\ bis\ keine\ solchen\ benachbarten\ Felder\ mehr\ existieren.\ \r\n\ Die\ Methode\ nutzt\ hierzu\ keine\ Rekursion.\r\n\ \r\n\ @param\ start\ das\ Feld\ welches\ aufgedeckt\ wurde\r\n\ @param\ neueFelder\ eine\ Liste,\ in\ der\ die\ von\ der\ Methode\ neu\ aufgedeckten\ Felder\ gespeichert\ werden\r\n
comment5.params=feld
comment5.target=java.util.List\ getNachbarFelder(Feld)
comment5.text=\r\n\ Liefert\ f\u00FCr\ ein\ bestimmtes\ Feld\ alle\ benachbarten\ Feld-Objekte.\r\n\ \r\n\ @param\ feld\ das\ Feld\ f\u00FCr\ welches\ die\ Nachbarn\ geliefert\ werden\ sollen\r\n\ @return\ Liste\ mit\ den\ benachbarten\ Feldern\r\n
comment6.params=feld
comment6.target=int\ getMarkierteNachbarnAnzahl(Feld)
comment6.text=\r\n\ Liefert\ die\ Anzahl\ der\ markierten\ Nachbarn\ eines\ Feldes.\r\n\ \r\n\ @param\ feld\ das\ Feld\ f\u00FCr\ welches\ die\ Anzahl\ der\ markierten\ Nachbarn\ geliefert\ werden\ soll\r\n\ @return\ Anzahl\ der\ markierten\ Nachbarfelder\r\n
comment7.params=r\ s
comment7.target=Feld\ getFeld(int,\ int)
comment7.text=\r\n\ Liefert\ das\ Feld\ Objekt\ an\ einer\ bestimmten\ Stelle.\r\n\ \r\n\ @param\ r\ die\ Reihe\ in\ der\ das\ Feld\ liegt\r\n\ @param\ s\ die\ Spalte\ in\ der\ das\ Feld\ liegt\r\n\ @return\ feld\r\n
comment8.params=
comment8.target=Feld[][]\ getFelder()
comment8.text=\r\n\ Liefert\ die\ Felder\ des\ Spielfelds.\r\n\ \r\n\ @return\ die\ Felder\ des\ Spielfelds\r\n
comment9.params=
comment9.target=int\ getReihen()
comment9.text=\r\n\ Liefert\ die\ Anzahl\ der\ Reihen\ des\ Spielfelds.\r\n\ \r\n\ @return\ Anzahl\ der\ Reihen\r\n
numComments=18
